name: Build and push docker image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

  PR_REPO: JUNIOR-42PARIS/argocd-apps


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    outputs:
      new_tag: ${{ steps.meta.outputs.tags }}
      version: ${{ steps.meta.outputs.labels }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  create-pull-request:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ env.PR_REPO }}

      - name: Update manifest
        id: update
        run: |
          title_inter=$(echo "${{needs.build.outputs.version}}" | head -1)
          version_inter=$(echo "${{needs.build.outputs.version}}" | sed -n 5p)
          new_tag=$(echo "${{needs.build.outputs.new_tag}}" | head -1)
          title=${title_inter#*=}
          version=${version_inter#*=}
          old_tag="${new_tag%:*}":.*
          find . -type f -name "*.yaml" | xargs sed -i "s|$old_tag|$new_tag|g"
          echo '::set-output name=title::'"$title" 
          echo '::set-output name=version::'"$version" 
      - uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT }}
          branch-suffix: short-commit-hash
          commit-message: Update ${{ steps.update.outputs.title }} to ${{ steps.update.outputs.version }}
          body: Automated pull request from [${{ github.event.repository.name }}](${{ github.repository }})
          title: Update ${{ steps.update.outputs.title }} to ${{ steps.update.outputs.version }}